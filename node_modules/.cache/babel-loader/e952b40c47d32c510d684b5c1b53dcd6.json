{"ast":null,"code":"var _jsxFileName = \"/Users/amaan/Desktop/Personal Projects/WildFire Tracker App/wildfire-app/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport GoogleMapReact from \"google-map-react\";\nimport LocationMarker from \"./LocationMarker\";\nimport LocationInfoBox from \"./LocationInfoBox\";\nimport CounterInfo from \"./CounterInfo\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    selected,\n    eventData,\n    center,\n    zoom\n  } = _ref;\n  const [locationInfo, setLocationInfo] = useState(null);\n  let volcanoes = 0;\n  let wildfires = 0;\n  let storms = 0;\n  let icebergs = 0;\n  let Vol = 0;\n  let Wild = 0;\n  let Storm = 0;\n  let Iceberg = 0;\n\n  const checker = () => {\n    selected.forEach(elem => {\n      if (elem.value === \"V\") {\n        Vol = 1;\n      } else if (elem.value === \"W\") {\n        Wild = 1;\n      } else if (elem.value === \"S\") {\n        Storm = 1;\n      } else if (elem.value === \"I\") {\n        Iceberg = 1;\n      }\n    });\n  };\n\n  checker();\n  const markers = eventData.map(ev => {\n    if (ev.categories[0].id === 8) {\n      wildfires += 1;\n      return /*#__PURE__*/_jsxDEV(LocationMarker, {\n        isWildfire: Wild,\n        lat: ev.geometries[0].coordinates[1],\n        lng: ev.geometries[0].coordinates[0],\n        onClick: () => {\n          setLocationInfo({\n            id: ev.categories[0].title,\n            title: ev.title\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    } else if (ev.categories[0].id === 8) {\n      volcanoes += 1;\n      return /*#__PURE__*/_jsxDEV(LocationMarker, {\n        isVolcano: Vol,\n        lat: ev.geometries[0].coordinates[1],\n        lng: ev.geometries[0].coordinates[0],\n        onClick: () => {\n          setLocationInfo({\n            id: ev.categories[0].title,\n            title: ev.title\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    } else if (ev.categories[0].id === 10) {\n      storms += 1;\n      return /*#__PURE__*/_jsxDEV(LocationMarker, {\n        isStorm: Storm,\n        lat: ev.geometries[0].coordinates[1],\n        lng: ev.geometries[0].coordinates[0],\n        onClick: () => {\n          setLocationInfo({\n            id: ev.categories[0].title,\n            title: ev.title\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    } else if (ev.categories[0].id === 15) {\n      icebergs += 1;\n      return /*#__PURE__*/_jsxDEV(LocationMarker, {\n        isIceberg: Iceberg,\n        lat: ev.geometries[0].coordinates[1],\n        lng: ev.geometries[0].coordinates[0],\n        onClick: () => {\n          setLocationInfo({\n            id: ev.categories[0].title,\n            title: ev.title\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    }\n\n    return null;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: \"AIzaSyBdBvxU8-2HtDvYhPDUS2jyP5x9Ze2f5hw\"\n        },\n        defaultCenter: center,\n        defaultZoom: zoom,\n        children: markers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), locationInfo && /*#__PURE__*/_jsxDEV(LocationInfoBox, {\n      info: locationInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(CounterInfo, {\n      volcanoes: volcanoes,\n      wildfires: wildfires,\n      storms: storms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"12TQ7nOZavxYGEoGTr51i7Gzxxc=\");\n\n_c = Map;\nMap.defaultProps = {\n  center: {\n    lat: 42.3265,\n    lng: -122.8756\n  },\n  zoom: 2\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/amaan/Desktop/Personal Projects/WildFire Tracker App/wildfire-app/src/components/Map.js"],"names":["GoogleMapReact","LocationMarker","LocationInfoBox","CounterInfo","useState","Map","selected","eventData","center","zoom","locationInfo","setLocationInfo","volcanoes","wildfires","storms","icebergs","Vol","Wild","Storm","Iceberg","checker","forEach","elem","value","markers","map","ev","categories","id","geometries","coordinates","title","key","defaultProps","lat","lng"],"mappings":"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","sourcesContent":["import GoogleMapReact from \"google-map-react\";\nimport LocationMarker from \"./LocationMarker\";\nimport LocationInfoBox from \"./LocationInfoBox\";\nimport CounterInfo from \"./CounterInfo\";\nimport { useState } from \"react\";\n\nconst Map = ({ selected, eventData, center, zoom }) => {\n  const [locationInfo, setLocationInfo] = useState(null);\n  let volcanoes = 0;\n  let wildfires = 0;\n  let storms = 0;\n  let icebergs = 0;\n  let Vol = 0;\n  let Wild = 0;\n  let Storm = 0;\n  let Iceberg = 0;\n  const checker = () => {\n    selected.forEach((elem) => {\n      if (elem.value === \"V\") {\n        Vol = 1;\n      } else if (elem.value === \"W\") {\n        Wild = 1;\n      } else if (elem.value === \"S\") {\n        Storm = 1;\n      } else if (elem.value === \"I\") {\n        Iceberg = 1;\n      }\n    });\n  };\n  checker();\n  const markers = eventData.map((ev) => {\n    if (ev.categories[0].id === 8) {\n      wildfires += 1;\n      return (\n        <LocationMarker\n          isWildfire={Wild}\n          lat={ev.geometries[0].coordinates[1]}\n          lng={ev.geometries[0].coordinates[0]}\n          onClick={() => {\n            setLocationInfo({ id: ev.categories[0].title, title: ev.title });\n          }}\n        />\n      );\n    } else if (ev.categories[0].id === 8) {\n      volcanoes += 1;\n      return (\n        <LocationMarker\n          isVolcano={Vol}\n          lat={ev.geometries[0].coordinates[1]}\n          lng={ev.geometries[0].coordinates[0]}\n          onClick={() => {\n            setLocationInfo({ id: ev.categories[0].title, title: ev.title });\n          }}\n        />\n      );\n    } else if (ev.categories[0].id === 10) {\n      storms += 1;\n      return (\n        <LocationMarker\n          isStorm={Storm}\n          lat={ev.geometries[0].coordinates[1]}\n          lng={ev.geometries[0].coordinates[0]}\n          onClick={() => {\n            setLocationInfo({ id: ev.categories[0].title, title: ev.title });\n          }}\n        />\n      );\n    } else if (ev.categories[0].id === 15) {\n        icebergs += 1;\n        return (\n          <LocationMarker\n            isIceberg={Iceberg}\n            lat={ev.geometries[0].coordinates[1]}\n            lng={ev.geometries[0].coordinates[0]}\n            onClick={() => {\n              setLocationInfo({ id: ev.categories[0].title, title: ev.title });\n            }}\n          />\n        );\n      }\n\n    return null;\n  });\n\n  return (\n    <div>\n      <div className=\"map\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyBdBvxU8-2HtDvYhPDUS2jyP5x9Ze2f5hw\" }}\n          defaultCenter={center}\n          defaultZoom={zoom}\n        >\n          {markers}\n        </GoogleMapReact>\n      </div>\n      {locationInfo && <LocationInfoBox info={locationInfo} />}\n      {<CounterInfo volcanoes={volcanoes} wildfires={wildfires} storms={storms}/>}\n    </div>\n  );\n};\n\nMap.defaultProps = {\n  center: {\n    lat: 42.3265,\n    lng: -122.8756,\n  },\n  zoom: 2,\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}