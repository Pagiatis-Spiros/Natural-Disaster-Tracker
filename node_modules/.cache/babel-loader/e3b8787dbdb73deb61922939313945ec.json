{"ast":null,"code":"var _jsxFileName = \"/Users/amaan/Desktop/Personal Projects/WildFire Tracker App/wildfire-app/src/components/DownloadButton.js\";\nimport { CSVLink } from \"react-csv\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Icon } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getCSVinfo = eventData => {\n  let tmpEntries = [];\n\n  for (let i = 0; i < eventData.length; ++i) {\n    tmpEntries.push([`${eventData[i].categories.title}`, `${event.id}`, `${event.title}`, `${event.geometries[0].date}`, `${event.geometries[0].coordinates[0]}`, `${event.geometries[0].coordinates[1]}`]);\n  }\n\n  adder();\n  return tmpEntries;\n};\n\nconst generateCSVData = eventData => {\n  const arr_columns = [\"Event Type\", \"Event ID\", \"Event Name\", \"Event Date\", \"Longitude\", \"Latitude\"];\n  const arr_infoTableData = getCSVinfo(eventData);\n  const arrayContent = [arr_columns, ...arr_infoTableData];\n  let str_csvContent = \"sep=!\\n\";\n  arrayContent.forEach(arr => {\n    const str_dataString = arr.join(\"!\");\n    str_csvContent += str_dataString + \"\\n\";\n  });\n  return str_csvContent;\n};\n\nconst getCSVFileName = () => {\n  let dt = new Date();\n  return `Disasters_Info_${dt.getDate()}_${dt.getMonth()}_${dt.getFullYear()}.csv`;\n};\n\nconst DownloadButton = _ref => {\n  let {\n    eventData\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Download All Data as csv\",\n      children: /*#__PURE__*/_jsxDEV(CSVLink, {\n        filename: getCSVFileName(),\n        separator: \"!\",\n        data: generateCSVData({\n          eventData\n        }),\n        asyncOnClick: true,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DownloadButton;\nexport default DownloadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DownloadButton\");","map":{"version":3,"sources":["/Users/amaan/Desktop/Personal Projects/WildFire Tracker App/wildfire-app/src/components/DownloadButton.js"],"names":["CSVLink","Tooltip","Icon","getCSVinfo","eventData","tmpEntries","i","length","push","categories","title","event","id","geometries","date","coordinates","adder","generateCSVData","arr_columns","arr_infoTableData","arrayContent","str_csvContent","forEach","arr","str_dataString","join","getCSVFileName","dt","Date","getDate","getMonth","getFullYear","DownloadButton"],"mappings":";AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AACA,MAAMC,UAAU,GAAIC,SAAD,IAAe;AAChC,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsC,EAAED,CAAxC,EAA2C;AACvCD,IAAAA,UAAU,CAACG,IAAX,CAAgB,CACb,GAAEJ,SAAS,CAACE,CAAD,CAAT,CAAaG,UAAb,CAAwBC,KAAM,EADnB,EAEb,GAAEC,KAAK,CAACC,EAAG,EAFE,EAGb,GAAED,KAAK,CAACD,KAAM,EAHD,EAIb,GAAEC,KAAK,CAACE,UAAN,CAAiB,CAAjB,EAAoBC,IAAK,EAJd,EAKb,GAAEH,KAAK,CAACE,UAAN,CAAiB,CAAjB,EAAoBE,WAApB,CAAgC,CAAhC,CAAmC,EALxB,EAMb,GAAEJ,KAAK,CAACE,UAAN,CAAiB,CAAjB,EAAoBE,WAApB,CAAgC,CAAhC,CAAmC,EANxB,CAAhB;AASH;;AACDC,EAAAA,KAAK;AACL,SAAOX,UAAP;AACD,CAfD;;AAiBA,MAAMY,eAAe,GAAIb,SAAD,IAAe;AACrC,QAAMc,WAAW,GAAG,CAClB,YADkB,EAElB,UAFkB,EAGlB,YAHkB,EAIlB,YAJkB,EAKlB,WALkB,EAMlB,UANkB,CAApB;AAQA,QAAMC,iBAAiB,GAAGhB,UAAU,CAACC,SAAD,CAApC;AACA,QAAMgB,YAAY,GAAG,CAACF,WAAD,EAAc,GAAGC,iBAAjB,CAArB;AACA,MAAIE,cAAc,GAAG,SAArB;AAEAD,EAAAA,YAAY,CAACE,OAAb,CAAsBC,GAAD,IAAS;AAC5B,UAAMC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAvB;AACAJ,IAAAA,cAAc,IAAIG,cAAc,GAAG,IAAnC;AACD,GAHD;AAIA,SAAOH,cAAP;AACD,CAlBD;;AAoBA,MAAMK,cAAc,GAAG,MAAM;AAC3B,MAAIC,EAAE,GAAG,IAAIC,IAAJ,EAAT;AACA,SAAQ,kBAAiBD,EAAE,CAACE,OAAH,EAAa,IAAGF,EAAE,CAACG,QAAH,EAAc,IAAGH,EAAE,CAACI,WAAH,EAAiB,MAA3E;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAG,QAAmB;AAAA,MAAlB;AAAE5B,IAAAA;AAAF,GAAkB;AACxC,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,0BAAf;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,QAAQ,EAAEsB,cAAc,EAD1B;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,IAAI,EAAET,eAAe,CAAC;AAAEb,UAAAA;AAAF,SAAD,CAHvB;AAIE,QAAA,YAAY,EAAE,IAJhB;AAAA,+BAME,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAM4B,c;AAiBN,eAAeA,cAAf","sourcesContent":["import { CSVLink } from \"react-csv\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Icon } from \"semantic-ui-react\";\nconst getCSVinfo = (eventData) => {\n  let tmpEntries = [];\n  for (let i = 0; i < eventData.length; ++i) {\n      tmpEntries.push([\n        `${eventData[i].categories.title}`,\n        `${event.id}`,\n        `${event.title}`,\n        `${event.geometries[0].date}`,\n        `${event.geometries[0].coordinates[0]}`,\n        `${event.geometries[0].coordinates[1]}`,\n      ]);\n    \n  }\n  adder();\n  return tmpEntries;\n};\n\nconst generateCSVData = (eventData) => {\n  const arr_columns = [\n    \"Event Type\",\n    \"Event ID\",\n    \"Event Name\",\n    \"Event Date\",\n    \"Longitude\",\n    \"Latitude\",\n  ];\n  const arr_infoTableData = getCSVinfo(eventData);\n  const arrayContent = [arr_columns, ...arr_infoTableData];\n  let str_csvContent = \"sep=!\\n\";\n\n  arrayContent.forEach((arr) => {\n    const str_dataString = arr.join(\"!\");\n    str_csvContent += str_dataString + \"\\n\";\n  });\n  return str_csvContent;\n};\n\nconst getCSVFileName = () => {\n  let dt = new Date();\n  return `Disasters_Info_${dt.getDate()}_${dt.getMonth()}_${dt.getFullYear()}.csv`;\n};\n\nconst DownloadButton = ({ eventData }) => {\n  return (\n    <div>\n      <Tooltip title=\"Download All Data as csv\">\n        <CSVLink\n          filename={getCSVFileName()}\n          separator={\"!\"}\n          data={generateCSVData({ eventData })}\n          asyncOnClick={true}\n        >\n          <Icon name=\"Download\" />\n        </CSVLink>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default DownloadButton;\n"]},"metadata":{},"sourceType":"module"}