{"ast":null,"code":"var _jsxFileName = \"/Users/amaan/Desktop/Personal Projects/WildFire Tracker App/wildfire-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Map from \"./components/Map\";\nimport Loader from \"./components/Loader\";\nimport Header from \"./components/Header\";\nimport { useState, useEffect } from \"react\";\nimport SelectionMenu from \"./components/SelectionMenu\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  label: \"WildFires ðŸ”¥\",\n  value: \"WW\"\n}, {\n  label: \"Volcanoes ðŸŒ‹\",\n  value: \"Volcanoes\"\n}];\n\nfunction App() {\n  _s();\n\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [Volcano, setVolcano] = useState(0);\n  const [Wildfire, setWildfire] = useState(0);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      const res = await fetch(\"https://eonet.gsfc.nasa.gov/api/v2.1/events\");\n      const {\n        events\n      } = await res.json();\n      setEventData(events);\n      setLoading(false);\n    };\n\n    fetchEvents();\n    console.log(eventData);\n  }, []);\n  selected.forEach(elem => {\n    if (elem.value === \"\") {}\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !loading ? /*#__PURE__*/_jsxDEV(Map, {\n      isVolcano: Volcano,\n      isWildfire: Wildfire,\n      eventData: eventData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select Disaster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(selected)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n        options: options,\n        value: selected,\n        onChange: setSelected,\n        labelledBy: \"Select\",\n        shouldToggleOnHover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3MROtmHX9+qjqn6x4visGmAmknw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/amaan/Desktop/Personal Projects/WildFire Tracker App/wildfire-app/src/App.js"],"names":["Map","Loader","Header","useState","useEffect","SelectionMenu","MultiSelect","options","label","value","App","eventData","setEventData","loading","setLoading","selected","setSelected","Volcano","setVolcano","Wildfire","setWildfire","fetchEvents","res","fetch","events","json","console","log","forEach","elem","JSON","stringify"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AACA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CAFc,CAAhB;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,CAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,WAAW,GAAG,YAAY;AAC9BP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAAvB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAa,MAAMF,GAAG,CAACG,IAAJ,EAAzB;AAEAb,MAAAA,YAAY,CAACY,MAAD,CAAZ;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPD;;AASAO,IAAAA,WAAW;AAEXK,IAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACD,GAbQ,EAaN,EAbM,CAAT;AAeAI,EAAAA,QAAQ,CAACa,OAAT,CAAiBC,IAAI,IAAI;AACvB,QAAIA,IAAI,CAACpB,KAAL,KAAe,EAAnB,EAAuB,CAEtB;AACF,GAJD;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACI,OAAD,gBACC,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEI,OAAhB;AAAyB,MAAA,UAAU,EAAEE,QAArC;AAA+C,MAAA,SAAS,EAAER;AAA1D;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAMmB,IAAI,CAACC,SAAL,CAAehB,QAAf;AAAN;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AACE,QAAA,OAAO,EAAER,OADX;AAEE,QAAA,KAAK,EAAEQ,QAFT;AAGE,QAAA,QAAQ,EAAEC,WAHZ;AAIE,QAAA,UAAU,EAAC,QAJb;AAKE,QAAA,mBAAmB,EAAE;AALvB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAhDQN,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import Map from \"./components/Map\";\nimport Loader from \"./components/Loader\";\nimport Header from \"./components/Header\";\nimport { useState, useEffect } from \"react\";\nimport SelectionMenu from \"./components/SelectionMenu\";\nimport { MultiSelect } from \"react-multi-select-component\";\nconst options = [\n  { label: \"WildFires ðŸ”¥\", value: \"WW\" },\n  { label: \"Volcanoes ðŸŒ‹\", value: \"Volcanoes\" },\n];\n\nfunction App() {\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [Volcano, setVolcano] = useState(0);\n  const [Wildfire, setWildfire] = useState(0);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      const res = await fetch(\"https://eonet.gsfc.nasa.gov/api/v2.1/events\");\n      const { events } = await res.json();\n\n      setEventData(events);\n      setLoading(false);\n    };\n\n    fetchEvents();\n\n    console.log(eventData);\n  }, []);\n\n  selected.forEach(elem => {\n    if (elem.value === \"\") {\n\n    }\n  })\n\n  return (\n    <div>\n      <Header />\n      {!loading ? (\n        <Map isVolcano={Volcano} isWildfire={Wildfire} eventData={eventData} />\n      ) : (\n        <Loader />\n      )}\n      <div className=\"selection-menu\">\n        <h1>Select Disaster</h1>\n        <pre>{JSON.stringify(selected)}</pre>\n        <MultiSelect\n          options={options}\n          value={selected}\n          onChange={setSelected}\n          labelledBy=\"Select\"\n          shouldToggleOnHover={true}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}