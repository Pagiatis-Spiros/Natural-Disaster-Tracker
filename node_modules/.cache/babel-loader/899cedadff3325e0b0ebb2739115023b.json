{"ast":null,"code":"var _jsxFileName = \"/Users/amaan/Desktop/Personal Projects/WildFire Tracker App/wildfire-app/src/components/DownloadButton.js\";\nimport { CSVLink } from \"react-csv\";\nimport Tooltip from '@mui/material/Tooltip';\nimport { Icon } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getCSVinfo = _ref => {\n  let {\n    eventData\n  } = _ref;\n  let tmpEntries = [];\n  eventData.forEach(event => {\n    tmpEntries.push([`${event.categories.title}`, `${event.id}`, `${event.title}`, `${event.geometries[0].date}`, `${event.geometries[0].coordinates[0]}`, `${event.geometries[0].coordinates[1]}`]);\n  });\n  return tmpEntries;\n};\n\nconst generateCSVData = () => {\n  const arr_columns = [\"Event Type\", \"Event ID\", \"Event Name\", \"Event Date\", \"Longitude\", \"Latitude\"];\n  const arr_infoTableData = this.getCSVinfo();\n  const arrayContent = [arr_columns, ...arr_infoTableData];\n  let str_csvContent = \"sep=!\\n\";\n  arrayContent.forEach(arr => {\n    const str_dataString = arr.join(\"!\");\n    str_csvContent += str_dataString + \"\\n\";\n  });\n  return str_csvContent;\n};\n\nconst getCSVFileName = () => {\n  let dt = new Date();\n  return `Disasters_Info_${dt.getDate()}_${dt.getMonth()}_${dt.getFullYear()}.csv`;\n};\n\nconst DownloadButton = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Download All Data as csv\",\n      children: /*#__PURE__*/_jsxDEV(CSVLink, {\n        filename: getCSVFileName(),\n        separator: \"!\",\n        data: getCSVInfo(),\n        onClick: this.handleCSVClick,\n        asyncOnClick: true,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DownloadButton;\nexport default DownloadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DownloadButton\");","map":{"version":3,"sources":["/Users/amaan/Desktop/Personal Projects/WildFire Tracker App/wildfire-app/src/components/DownloadButton.js"],"names":["CSVLink","Tooltip","Icon","getCSVinfo","eventData","tmpEntries","forEach","event","push","categories","title","id","geometries","date","coordinates","generateCSVData","arr_columns","arr_infoTableData","arrayContent","str_csvContent","arr","str_dataString","join","getCSVFileName","dt","Date","getDate","getMonth","getFullYear","DownloadButton","getCSVInfo","handleCSVClick"],"mappings":";AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;;;AACA,MAAMC,UAAU,GAAG,QAAmB;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AACpC,MAAIC,UAAU,GAAG,EAAjB;AACAD,EAAAA,SAAS,CAACE,OAAV,CAAmBC,KAAD,IAAW;AAC3BF,IAAAA,UAAU,CAACG,IAAX,CAAgB,CACb,GAAED,KAAK,CAACE,UAAN,CAAiBC,KAAM,EADZ,EAEb,GAAEH,KAAK,CAACI,EAAG,EAFE,EAGb,GAAEJ,KAAK,CAACG,KAAM,EAHD,EAIb,GAAEH,KAAK,CAACK,UAAN,CAAiB,CAAjB,EAAoBC,IAAK,EAJd,EAKb,GAAEN,KAAK,CAACK,UAAN,CAAiB,CAAjB,EAAoBE,WAApB,CAAgC,CAAhC,CAAmC,EALxB,EAMb,GAAEP,KAAK,CAACK,UAAN,CAAiB,CAAjB,EAAoBE,WAApB,CAAgC,CAAhC,CAAmC,EANxB,CAAhB;AAQD,GATD;AAUA,SAAOT,UAAP;AACD,CAbD;;AAeA,MAAMU,eAAe,GAAG,MAAM;AAC5B,QAAMC,WAAW,GAAG,CAClB,YADkB,EAElB,UAFkB,EAGlB,YAHkB,EAIlB,YAJkB,EAKlB,WALkB,EAMlB,UANkB,CAApB;AAQA,QAAMC,iBAAiB,GAAG,KAAKd,UAAL,EAA1B;AACA,QAAMe,YAAY,GAAG,CAACF,WAAD,EAAc,GAAGC,iBAAjB,CAArB;AACA,MAAIE,cAAc,GAAG,SAArB;AAEAD,EAAAA,YAAY,CAACZ,OAAb,CAAsBc,GAAD,IAAS;AAC5B,UAAMC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAvB;AACAH,IAAAA,cAAc,IAAIE,cAAc,GAAG,IAAnC;AACD,GAHD;AAIA,SAAOF,cAAP;AACD,CAlBD;;AAoBA,MAAMI,cAAc,GAAG,MAAM;AAC3B,MAAIC,EAAE,GAAG,IAAIC,IAAJ,EAAT;AACA,SAAQ,kBAAiBD,EAAE,CAACE,OAAH,EAAa,IAAGF,EAAE,CAACG,QAAH,EAAc,IAAGH,EAAE,CAACI,WAAH,EAAiB,MAA3E;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAG,MAAM;AAC3B,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,0BAAf;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,QAAQ,EAAEN,cAAc,EAD1B;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,IAAI,EAAEO,UAAU,EAHlB;AAIE,QAAA,OAAO,EAAE,KAAKC,cAJhB;AAKE,QAAA,YAAY,EAAE,IALhB;AAAA,+BAOE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBD;;KAAMF,c;AAkBN,eAAeA,cAAf","sourcesContent":["import { CSVLink } from \"react-csv\";\nimport Tooltip from '@mui/material/Tooltip';\nimport {Icon} from 'semantic-ui-react'\nconst getCSVinfo = ({ eventData }) => {\n  let tmpEntries = [];\n  eventData.forEach((event) => {\n    tmpEntries.push([\n      `${event.categories.title}`,\n      `${event.id}`,\n      `${event.title}`,\n      `${event.geometries[0].date}`,\n      `${event.geometries[0].coordinates[0]}`,\n      `${event.geometries[0].coordinates[1]}`,\n    ]);\n  });\n  return tmpEntries;\n};\n\nconst generateCSVData = () => {\n  const arr_columns = [\n    \"Event Type\",\n    \"Event ID\",\n    \"Event Name\",\n    \"Event Date\",\n    \"Longitude\",\n    \"Latitude\",\n  ];\n  const arr_infoTableData = this.getCSVinfo();\n  const arrayContent = [arr_columns, ...arr_infoTableData];\n  let str_csvContent = \"sep=!\\n\";\n\n  arrayContent.forEach((arr) => {\n    const str_dataString = arr.join(\"!\");\n    str_csvContent += str_dataString + \"\\n\";\n  });\n  return str_csvContent;\n};\n\nconst getCSVFileName = () => {\n  let dt = new Date();\n  return `Disasters_Info_${dt.getDate()}_${dt.getMonth()}_${dt.getFullYear()}.csv`;\n};\n\nconst DownloadButton = () => {\n  return (\n    <div>\n      <Tooltip title=\"Download All Data as csv\">\n        <CSVLink\n          filename={getCSVFileName()}\n          separator={\"!\"}\n          data={getCSVInfo()}\n          onClick={this.handleCSVClick}\n          asyncOnClick={true}\n        >\n          <Icon name=\"Download\" />\n        </CSVLink>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default DownloadButton;"]},"metadata":{},"sourceType":"module"}